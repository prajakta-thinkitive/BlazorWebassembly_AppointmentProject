@page "/editdoctor/{id:int}"
@inject BlazorWebassembly_Appointment.Client.Services.DoctorService DoctorService
@inject NavigationManager NavigationManager
@using BlazorWebassembly_Appointment.Shared



<style>
    body {
        background-color: #f8f9fa;
        background-image: url('/Images/Clinic_background.jpg');
        opacity: 0.9;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }

    .container {
        background-color: #ffffff;
        overflow-y: scroll;
        height: 600px;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        width: 100%;
        margin: 50px auto;
    }
</style>

<div class="container">
    <h3>Edit Doctor</h3>
    <hr />

    @if (doctor == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <EditForm Model="@doctor" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="name">Name:</label>
                <InputText id="name" class="form-control" @bind-Value="doctor.Name" />
                <ValidationMessage For="@(() => doctor.Name)" />
            </div>
            <div class="form-group">
                <label for="specialty">Specialty:</label>
                <InputText id="specialty" class="form-control" @bind-Value="doctor.Specialty" />
                <ValidationMessage For="@(() => doctor.Specialty)" />
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <InputText id="email" class="form-control" @bind-Value="doctor.Email" />
                <ValidationMessage For="@(() => doctor.Email)" />
            </div>
            <div class="form-group">
                <label for="mobileNumber">Mobile Number:</label>
                <InputText id="mobileNumber" class="form-control"  @bind-Value="doctor.MobileNumber" />
                <ValidationMessage For="@(() => doctor.MobileNumber)" />
            </div>
            <div class="form-group">
                <label for="education">Education:</label>
                <InputText id="education" class="form-control" @bind-Value="doctor.Education" />
                <ValidationMessage For="@(() => doctor.Education)" />
            </div>
            <div class="form-group">
                <label for="treatment">Treatment:</label>
                <InputText id="treatment" class="form-control" @bind-Value="doctor.Treatment" />
                <ValidationMessage For="@(() => doctor.Treatment)" />
            </div>
            <div class="form-group">
                <label for="profileImage">Profile Image URL:</label>
                <InputText id="profileImage" class="form-control" @bind-Value="doctor.ProfileImage" />
                <ValidationMessage For="@(() => doctor.ProfileImage)" />
            </div>

            <button type="submit" class="btn btn-primary">Save</button>
            <a href="doctors" type="submit">Back to list</a>
        </EditForm>
    }

</div>






@code {
    [Parameter]
    public int Id { get; set; }
    private DoctorDetail doctor;

    protected override async Task OnInitializedAsync()
    {
        doctor = await DoctorService.GetDoctor(Id);
    }

    private async Task HandleValidSubmit()
    {
        await DoctorService.UpdateDoctor(doctor);
        NavigationManager.NavigateTo("/doctors");
    }
}
