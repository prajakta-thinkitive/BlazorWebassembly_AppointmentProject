@page "/doctors/view-all"
@using BlazorWebassembly_Appointment.Shared
@using BlazorWebassembly_Appointment.Shared.Dtos
@inject BlazorWebassembly_Appointment.Client.Services.DoctorService DoctorService
@inject NavigationManager NavigationManager


<style>
    body {
        background-color: #f8f9fa;
        background-image: url('/Images/Clinic_background.jpg');
        opacity: 0.9;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }

    .container {
        background-color: #ffffff;
        overflow-y: scroll;
        height: 444px;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        width: 67%;
        margin: 50px auto;
    }
    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .table th {
            background-color: #f2f2f2;
        }

   

    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            display: none;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
        }

   
    input[type="checkbox"]:checked + input[type="hidden"] + .slider,
    input[type="checkbox"]:checked + .slider {
        background-color: #2196F3;
    }

   
    input[type="checkbox"]:focus + input[type="hidden"] + .slider,
    input[type="checkbox"]:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

   
    input[type="checkbox"]:checked + input[type="hidden"] + .slider:before,
    input[type="checkbox"]:checked + .slider:before {
        transform: translateX(26px);
    }
  /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
</style>

<div class="container">
    <div class="back_arrow_div">
        <button class="back_button">
            <span class="newback_btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                    <path d="M0 0h24v24H0z" fill="none" />
                    <path d="M14 7l-5 5 5 5V7z" />
                </svg>
            </span>
        </button>
    </div>
    <h3>All Doctors</h3>

    @if (doctors == null || doctors.Count == 0)
    {
        <p>No doctors found.</p>
    }
    else
    {
        <form @onsubmit="SaveChanges">
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Speciality</th>
                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var doctor in doctors)
                    {
                        <tr>
                            <td>@doctor.Id</td>
                            <td>@doctor.Name</td>
                            <td>@doctor.Email</td>
                          <td>@doctor.Specialty</td>
                            <td>
                                <div class="toggle-button">
                                    <label class="switch">
                                        <input type="checkbox" @bind="doctor.IsChecked">
                                        <span class="slider round"></span>
                                    </label>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <button type="submit" class="btn btn-info" style="width:20%">Save</button>
        </form>
    }


</div>

@code {
    private List<DoctorDetail> doctors;

    protected override async Task OnInitializedAsync()
    {
        doctors = await DoctorService.GetDoctors();
    }

    private async Task SaveChanges()
    {
        foreach (var doctor in doctors)
        {
            await DoctorService.UpdateDoctorStatus(doctor.Id, doctor.IsChecked ?? false);
        }
        NavigationManager.NavigateTo("/active-doctors");

    }

   
}